plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.2.1"
    id("io.micronaut.test-resources") version "4.2.1"
    id("io.micronaut.aot") version "4.2.1"
    id("checkstyle")
    id('jacoco')
    id "org.sonarqube" version "4.4.1.3373"
}

version = "0.1"
group = "broccoli"

repositories {
    mavenCentral()
    gradlePluginPortal()
}

ext {
    keycloakVersion = '23.0.3'
}

checkstyle {
    toolVersion '10.12.5'
    enableExternalDtdLoad = true
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")

    implementation("com.ongres.scram:client")
    implementation("io.micrometer:context-propagation")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.liquibase:micronaut-liquibase")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.security:micronaut-security-oauth2")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("org.keycloak:keycloak-policy-enforcer:${keycloakVersion}")
    implementation("org.keycloak:keycloak-admin-client:${keycloakVersion}")
    compileOnly("io.micronaut:micronaut-http-client")
    compileOnly("org.projectlombok:lombok")

    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.postgresql:postgresql")

    testAnnotationProcessor("io.micronaut:micronaut-inject-java")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-engine")
    testImplementation("org.junit.jupiter:junit-jupiter-params")
    testImplementation("org.mockito:mockito-junit-jupiter")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:postgresql")
    testImplementation("org.testcontainers:testcontainers")
    testImplementation('com.github.dasniko:testcontainers-keycloak:3.2.0')
    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation("org.keycloak:keycloak-test-helper:${keycloakVersion}")
    testRuntimeOnly("com.h2database:h2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

application {
    mainClass.set("broccoli.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("21")
    targetCompatibility = JavaVersion.toVersion("21")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("broccoli.*")
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}

jacocoTestReport {
    reports {
        xml.required = true
    }
    dependsOn test // tests are required to run before generating the report
}

jacoco {
    toolVersion = "0.8.9"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

tasks.named('sonar') {
    properties.put("sonar.projectKey", "miguoliang_broccoli")
    properties.put("sonar.organization", "miguoliang")
    properties.put("sonar.host.url", "https://sonarcloud.io")
    properties.put("sonar.sources", "${layout.projectDirectory}/src/main")
    properties.put("sonar.tests", "${layout.projectDirectory}/src/test")
}


